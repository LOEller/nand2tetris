// wrapper class for the linked list of snake segments
class Snake {

   field SnakeSegment firstSegment;

   constructor Snake new() {
      let firstSegment = SnakeSegment.new(20, 20, 1);
      return this;
   }

   method void dispose() {
      do firstSegment.dispose(); // recursively deletes all snake segments 
      do Memory.deAlloc(this);
      return;
   }

   // changes the direction that the "head" of the snake is moving 
   method void changeDirection(int direction) {
      // TODO
      return;
   }

   // goes through the list of snake segments and calls 
   // draw on each one
   method void drawSegments() {
      // TODO
      return;
   }

   // goes through the list of snake segments and calls 
   // erase on each one
   method void eraseSegments() {
      // TODO
      return;
   }

   // goes through the list of snake segments and updates their positions 
   // appropriately
   method void moveSegments() {
      // TODO 
      return;
   }

   // adds a segment to this snake
   method void addSegment() {
    // TODO
    return;
   }
}
