class SnakeGame {
   field Snake snake; 
   field Food food; 
                    
   constructor SnakeGame new() {
      let snake = Snake.new();
      let food = Food.new(100, 100);
      return this;
   }

   method void dispose() {
      do snake.dispose();
      do food.dispose();
      do Memory.deAlloc(this);
      return;
   }

   method boolean detectWallCollision(Snake snake) {
     // returns True if head of snake has collided with one of 
     // the walls and False otherwise
     if (snake.getLeftBound() < 1) {
        return true;
     }
     if (snake.getRightBound() > 510) {
        return true;
     } 
     if (snake.getTopBound() < 1) {
        return true;
     }
     if (snake.getBottomBound() > 254) {
        return true;
     }
     return false;
   }

   method boolean detectFoodCollision(Snake snake, Food food) {
     // returns True if the head of the snake has collided with 
     // the food and False otherwise

     // if (RectA.Left < RectB.Right && RectA.Right > RectB.Left &&  RectA.Top > RectB.Bottom && RectA.Bottom < RectB.Top ) 

     if (snake.getLeftBound() < food.getRightBound()) {
        if (snake.getRightBound() > food.getLeftBound()) {
            if (snake.getTopBound() > food.getBottomBound()) {
                if (snake.getBottomBound() < food.getTopBound()) {
                    return true;
                }
            }
        }
     }
     return false;
   }

   /** Runs the game: handles the user's inputs and moves the snake accordingly */
   method void run() {
      var char key;  // the key currently pressed by the user
      var boolean exit;
      let exit = false;
      
      while (~exit) {
         // update and draw the snake 
         do snake.eraseSegments();
         do snake.moveSegments();
         do snake.drawSegments();

         let key = Keyboard.keyPressed();

         // update head of snake's direction if input is given
         if (key = 81)  { let exit = true; }                // q key
         if (key = 131) { do snake.setDirection(1); }   // up arrow
         if (key = 133) { do snake.setDirection(2); }   // down arrow
         if (key = 130) { do snake.setDirection(3); }   // left arrow
         if (key = 132) { do snake.setDirection(4); }   // right arrow

         // detect collision with the wall 
         if (detectWallCollision(snake)) {
            let exit = true;
         }

        // detect collision with the food
        if (detectFoodCollision(snake, food)) {
            do food.erase();
            // TODO figure out how to make random numbers???
            do food.move(200, 200);
            do food.draw();
            do snake.addSegment();
         }
     } 
     return;
   }
}



