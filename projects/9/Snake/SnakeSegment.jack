// Linked list node representing a single segment in the snake
class SnakeSegment {

   field int x, y, deltax, deltay, size; 
   field SnakeSegment next;

   constructor SnakeSegment new(int ax, int ay) {
      let x = ax;
      let y = ay;
      let size = 10;
      let next = null;
      return this;
   }

   method void setDeltaX(int Adeltax) {
     let deltax = Adeltax;
     return;
   }

   method void setDeltaY(int Adeltay) {
     let deltay = Adeltay;
     return;
   }

   method int getX() {
    return x;
   }

   method int getY() {
    return y;
   }

   method int getSize() {
    return size;
   }

   /** Disposes this snake segment and recursively all the ones after it. */
   method void dispose() {
      if (~(next = null)) {
        do next.dispose();
      }
      do Memory.deAlloc(this);
      return;
   }

   method SnakeSegment getNext() {
     return next;
   }

   method void draw() {
      // Draws the segment using the color black
      do Screen.setColor(true);
      do Screen.drawRectangle(x, y, x + size, y + size);
      return;
   }

   method void erase() {
      // Draws the segment using the color white (background color)
      do Screen.setColor(false);
      do Screen.drawRectangle(x, y, x + size, y + size);
      return;
   }

   method void move() {
      let x = x + deltax;
      let y = y + deltay;
      return;
   }
}
